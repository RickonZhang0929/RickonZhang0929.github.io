(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{410:function(v,_,p){v.exports=p.p+"assets/img/pic1.3e39aade.png"},411:function(v,_,p){v.exports=p.p+"assets/img/pic2.c1e9531b.png"},420:function(v,_,p){"use strict";p.r(_);var t=p(2),r=Object(t.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("center",[_("big",[_("b",[v._v("美赛经验")])])],1),v._v(" "),_("p",[_("strong",[v._v("参赛情况")])]),v._v(" "),_("p",[v._v("我参加了两次的美赛，我们选择的都是MCM中的B题，2021年拿到了H奖，2022年拿到了F奖。")]),v._v(" "),_("img",{attrs:{width:"400",height:"300",src:p(410)}}),v._v("\n    \n"),_("img",{attrs:{width:"400",height:"300",src:p(411)}}),v._v(" "),_("p",[_("strong",[v._v("参赛论文")])]),v._v(" "),_("p",[v._v("下面附上两次比赛的论文")]),v._v(" "),_("p",[_("a",{attrs:{href:"/file/2021paper.pdf"}},[v._v("2021paper")])]),v._v(" "),_("p",[_("a",{attrs:{href:"/file/2022paper.pdf"}},[v._v("2022paper")])]),v._v(" "),_("p",[_("strong",[v._v("参赛经验")])]),v._v(" "),_("p",[v._v("下面是比赛的经验分享")]),v._v(" "),_("p",[_("a",{attrs:{href:"/file/MCM.pdf"}},[v._v("经验分享")])]),v._v(" "),_("p",[_("strong",[v._v("参赛感悟")])]),v._v(" "),_("p",[v._v("    下面来谈一谈我对数学建模的看法")]),v._v(" "),_("p",[v._v("    我一直认为数学建模是非常重要的一个环节，因为它是一个将知识应用的过程。使用数学物理知识解决实际问题的过程。数学建模是最小型的科研过程。科研的过程就是发现问题，搜集资料，提出方案，解决问题的过程。")]),v._v(" "),_("p",[v._v("    只不过学术界的科研问题都是细分领域下非常具体的问题解决，其背景知识都十分庞杂，解决的大多也都是细节的进步，而非是宏观的完整的解决方案。然后现实中有很多各种有意思的问题，例如鸡蛋从万里高空落地是怎么样的，包括毕导的薯片掉地上能不能吃，这些都是对实际问题建模分析的过程。")]),v._v(" "),_("p",[_("strong",[v._v("分析问题")])]),v._v(" "),_("p",[v._v("    分析问题，一共有多少个问题，相互之间是否有关联。问题的解决方案的形式是什么，这就好比写一个函数，首先要明确函数的输入输出和实现的功能。提出一个大的问题，然后不断拆解成小的问题。拆解是核心过程。在解决每一个小问题的时候，需要什么样的数据，如何解决这个小问题。")]),v._v(" "),_("p",[_("strong",[v._v("查找资料")])]),v._v(" "),_("p",[v._v("    整体的思路是，用什么学什么。解决的思路要靠查找资料。问题的类型是什么呢？是决策，分类还是计算。然后将问题概括出来，进行算法和资料的查找，查找的时候尽量使用不同的关键词获得更好的效果。找到了资料后，将他人的解决问题的方法看懂，然后对比问题的情景，进行迁移。")]),v._v(" "),_("p",[_("strong",[v._v("数据处理")])]),v._v(" "),_("p",[v._v("    对实际数据的处理。首先是通过各种官方统计的数据，拿到原始的可靠的数据。但是原始的数据往往不够直观，因此需要进行处理。进行估计和近似取整，采用归一化等方式进行标准化。")]),v._v(" "),_("p",[_("strong",[v._v("结果表示")])]),v._v(" "),_("p",[v._v("    可视化的表示，表格，图表，地形图和示意图都是非常管用的。在不同的接受信息的方式中，图像往往是最直观的，因此，图示将会变得非常重要。无论是方法结构，算法流程，问题结果，都应该尽可能配上图像。直观的结果也能最快让读者抓住主要的信息。")]),v._v(" "),_("p",[_("strong",[v._v("业务能力")])]),v._v(" "),_("p",[v._v("    在互联网公司的业务线上，经常有这么一个说法，叫做业务能力。什么是业务能力？业务能力有时候比技术本身更重要。当你需要一个指标来进行推荐和搜索排序的时候，选择哪个指标，如何来衡量一个人对某一件事物的兴趣。这些都是需要将实际问题转化为算法问题，最后使用程序和代码来实现。这个问题也是一个建模的过程。这个过程的难度和含金量非常高。因为不仅需要能够将其转换为可用的模型，这需要对模型的可用性有足够深的了解，更需要对实际的场景和业务熟知。比如食品的分类和商品的经销商的层次。之所以工业互联网实现起来很困难，就是因为它没有办法普适化，每一个场景都需要特别定制，但是算法工程师是不了解的，这个耦合的程度太高了，这也是为什么公司很欠缺这样的人，因为解决问题需要的是方案，而不是执行。")]),v._v(" "),_("p",[_("strong",[v._v("比赛要点")])]),v._v(" "),_("p",[v._v("    在四天的时间中，完成一个复杂的模型并保证其有效性显然是困难的，那么就要面向比赛来建模。核心是把问题说清楚。拆解成了哪几个问题，每个问题的条件，方法，结论是什么。很关键的两个环节，一个是方法的介绍，第一步，第二步，要能够用算法式的语言和流程图来描述，一个是结果的显示，一定要多采用图表，示意图，地形图，数据图，图示是最直观的方式。也是一个化繁为简的过程。把摘要写好，把过程说清楚，把可视化做好。文档的编写要专业，目录的结构。排版推荐Latex。标签式语言，非常方便。")]),v._v(" "),_("p",[_("strong",[v._v("其他感想")])]),v._v(" "),_("p",[v._v("    抛开比赛，我想谈几点有意思的地方。一个是现实的条件复杂的多，建模的时候要学会假设和取舍，这不代表方案是无效的，而是尽可能有效的最优解。假设条件和实际情况的近似和估计。我看到过一本书专门是讲如何估算各种生活中的问题，非常有趣。这里面就用了大量的估算和近似，从而得出各种神奇问题的答案。")]),v._v(" "),_("p",[_("strong",[v._v("要有耐心")])]),v._v(" "),_("p",[v._v("    不要灰心，在刚开始做事的时候很容易没头脑乱转。然后很沮丧，没必要，这是一个循序渐进的过程，因此可以反复思考反复重复，说不定某一个做着做着就出现想法和问题了。比如在决策的时候，一个无人机的价格是多少，一共需要多少，这些都是需要查询调研的数据。很多时候一个问题的提出来很大，一下子就把人给吓住了。拆解问题，一点一点搜集资料，逐个攻破是很有意思的。")])],1)}),[],!1,null,null,null);_.default=r.exports}}]);